{"ast":null,"code":"var _jsxFileName = \"/home/laudemir/\\xC1rea de Trabalho/projeto-gestao-de-habitos/src/Providers/habitsList/index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport api from \"../../services\";\nimport { useJwt } from \"react-jwt\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HabitListContext = /*#__PURE__*/createContext();\nexport const HabitListProvider = ({\n  children\n}) => {\n  _s();\n\n  const user = localStorage.getItem(\"user\");\n  const [habitList, setHabitList] = useState([]);\n  const [tokenLocal] = useState(JSON.parse(localStorage.getItem(\"@KenzieHealth:token\")) || \"\");\n  const token = `Bearer ${tokenLocal}`;\n  const {\n    decodedToken,\n    isExpired\n  } = useJwt(token);\n\n  const notifyGetHabitList = () => toast.error(\"Erro ao carregar seus hábitos!\");\n\n  const notifyRemoveHabit = () => toast.error(\"Erro ao remover seu hábito!\");\n\n  const notifyCreateHabit = () => toast.error(\"Erro ao criar seu hábito!\");\n\n  const notifyUpdateHabit = () => toast.error(\"Erro ao atualizar seu hábito!\");\n\n  const getHabitList = () => {\n    api.get(\"/habits/personal/\", {\n      headers: {\n        Authorization: token\n      }\n    }).then(response => setHabitList(response.data)).catch(() => notifyGetHabitList());\n  };\n\n  console.log(habitList);\n  useEffect(() => {\n    getHabitList();\n  }, []);\n\n  const removeHabit = habit => {\n    api.delete(`/habits/${habit.id}/`, {\n      headers: {\n        Authorization: token\n      }\n    }).then(() => getHabitList()).catch(() => notifyRemoveHabit());\n  };\n\n  const createHabit = habit => {\n    let newHabit = { ...habit,\n      how_much_achieved: 0,\n      user: decodedToken.user_id\n    };\n    api.post(\"/habits/\", newHabit, {\n      headers: {\n        Authorization: token\n      }\n    }).then(() => getHabitList()).catch(() => notifyCreateHabit());\n  };\n\n  const updateHabit = (habit, item) => {\n    const newHabit = {\n      how_much_achieved: habit\n    };\n    api.patch(`/habits/${item}/`, newHabit, {\n      headers: {\n        Authorization: token\n      }\n    }).then(() => getHabitList()).catch(() => notifyUpdateHabit());\n  };\n\n  return /*#__PURE__*/_jsxDEV(HabitListContext.Provider, {\n    value: {\n      habitList,\n      removeHabit,\n      createHabit,\n      updateHabit,\n      getHabitList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HabitListProvider, \"nOTD//dMEO4EdCVxjBpdKexLrCc=\", false, function () {\n  return [useJwt];\n});\n\n_c = HabitListProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"HabitListProvider\");","map":{"version":3,"sources":["/home/laudemir/Área de Trabalho/projeto-gestao-de-habitos/src/Providers/habitsList/index.js"],"names":["createContext","useState","useEffect","api","useJwt","toast","HabitListContext","HabitListProvider","children","user","localStorage","getItem","habitList","setHabitList","tokenLocal","JSON","parse","token","decodedToken","isExpired","notifyGetHabitList","error","notifyRemoveHabit","notifyCreateHabit","notifyUpdateHabit","getHabitList","get","headers","Authorization","then","response","data","catch","console","log","removeHabit","habit","delete","id","createHabit","newHabit","how_much_achieved","user_id","post","updateHabit","item","patch"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport api from \"../../services\";\nimport { useJwt } from \"react-jwt\";\nimport { toast } from \"react-toastify\";\n\nexport const HabitListContext = createContext();\n\nexport const HabitListProvider = ({ children }) => {\n  const user = localStorage.getItem(\"user\");\n  const [habitList, setHabitList] = useState([]);\n  const [tokenLocal] = useState(\n    JSON.parse(localStorage.getItem(\"@KenzieHealth:token\")) || \"\"\n  );\n  const token = `Bearer ${tokenLocal}`;\n  const { decodedToken, isExpired } = useJwt(token);\n  const notifyGetHabitList = () =>\n    toast.error(\"Erro ao carregar seus hábitos!\");\n  const notifyRemoveHabit = () => toast.error(\"Erro ao remover seu hábito!\");\n  const notifyCreateHabit = () => toast.error(\"Erro ao criar seu hábito!\");\n  const notifyUpdateHabit = () => toast.error(\"Erro ao atualizar seu hábito!\");\n\n  const getHabitList = () => {\n    api\n      .get(\"/habits/personal/\", {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then((response) => setHabitList(response.data))\n      .catch(() => notifyGetHabitList());\n  };\n\n  console.log(habitList);\n\n  useEffect(() => {\n    getHabitList();\n  }, []);\n\n  const removeHabit = (habit) => {\n    api\n      .delete(`/habits/${habit.id}/`, {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then(() => getHabitList())\n      .catch(() => notifyRemoveHabit());\n  };\n\n  const createHabit = (habit) => {\n    let newHabit = {\n      ...habit,\n      how_much_achieved: 0,\n      user: decodedToken.user_id,\n    };\n    api\n      .post(\"/habits/\", newHabit, {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then(() => getHabitList())\n      .catch(() => notifyCreateHabit());\n  };\n\n  const updateHabit = (habit, item) => {\n    const newHabit = { how_much_achieved: habit };\n    api\n      .patch(`/habits/${item}/`, newHabit, {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then(() => getHabitList())\n      .catch(() => notifyUpdateHabit());\n  };\n\n  return (\n    <HabitListContext.Provider\n      value={{ habitList, removeHabit, createHabit, updateHabit, getHabitList }}\n    >\n      {children}\n    </HabitListContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}