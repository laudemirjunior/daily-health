{"ast":null,"code":"var _jsxFileName = \"/home/laudemir/\\xC1rea de Trabalho/projeto-gestao-de-habitos/src/Providers/user/index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [authenticated, setAuthenticated] = useState(false);\n\n  const constLogin = data => {\n    api.post(\"/sessions/\", data).then(response => {\n      top();\n    }).then(response => {\n      localStorage.setItem(\"@KenzieHealth:userName\", data.username);\n      localStorage.setItem(\"@KenzieHealth:token\", JSON.stringify(response.data.access));\n      toast.success(\"Login feito com ucesso!\");\n      setAuthenticated(true);\n      history.push(\"/dashboard\");\n    }).catch(() => {\n      toast.error(\"Username ou senha inválidos!\");\n    });\n  };\n\n  const constSignUp = data => {\n    api.post(\"/users/\", data).then(() => toast.success(\"Conta Criada Com Sucesso!\")).then(() => history.push(\"/login\")).catch(err => {\n      console.log(err);\n      toast.error(\"Erro ao Criar a Conta\");\n    });\n  };\n\n  useEffect(() => {\n    const token = JSON.parse(localStorage.getItem(\"@KenzieHealth:token\"));\n\n    if (token) {\n      return setAuthenticated(true);\n    }\n  }, [authenticated]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      constLogin,\n      constSignUp,\n      authenticated,\n      setAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProvider, \"40zbamZgJwA8AUkvawF3xHPuP10=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/home/laudemir/Área de Trabalho/projeto-gestao-de-habitos/src/Providers/user/index.js"],"names":["createContext","useEffect","useState","useHistory","toast","api","UserContext","UserProvider","children","history","authenticated","setAuthenticated","constLogin","data","post","then","response","top","localStorage","setItem","username","JSON","stringify","access","success","push","catch","error","constSignUp","err","console","log","token","parse","getItem"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;AAEP,OAAO,MAAMO,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMU,UAAU,GAAIC,IAAD,IAAU;AAC3BR,IAAAA,GAAG,CACAS,IADH,CACQ,YADR,EACsBD,IADtB,EAEGE,IAFH,CAESC,QAAD,IAAc;AAAEC,MAAAA,GAAG;AACxB,KAHH,EAIGF,IAJH,CAISC,QAAD,IAAc;AAClBE,MAAAA,YAAY,CAACC,OAAb,CAAqB,wBAArB,EAA+CN,IAAI,CAACO,QAApD;AACAF,MAAAA,YAAY,CAACC,OAAb,CACE,qBADF,EAEEE,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACH,IAAT,CAAcU,MAA7B,CAFF;AAIAnB,MAAAA,KAAK,CAACoB,OAAN,CAAc,yBAAd;AACAb,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAF,MAAAA,OAAO,CAACgB,IAAR,CAAa,YAAb;AACD,KAbH,EAcGC,KAdH,CAcS,MAAM;AACXtB,MAAAA,KAAK,CAACuB,KAAN,CAAY,8BAAZ;AACD,KAhBH;AAiBD,GAlBD;;AAoBA,QAAMC,WAAW,GAAIf,IAAD,IAAU;AAC5BR,IAAAA,GAAG,CACAS,IADH,CACQ,SADR,EACmBD,IADnB,EAEGE,IAFH,CAEQ,MAAMX,KAAK,CAACoB,OAAN,CAAc,2BAAd,CAFd,EAGGT,IAHH,CAGQ,MAAMN,OAAO,CAACgB,IAAR,CAAa,QAAb,CAHd,EAIGC,KAJH,CAIUG,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAzB,MAAAA,KAAK,CAACuB,KAAN,CAAY,uBAAZ;AACD,KAPH;AAQD,GATD;;AAWA1B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM+B,KAAK,GAAGX,IAAI,CAACY,KAAL,CAAWf,YAAY,CAACgB,OAAb,CAAqB,qBAArB,CAAX,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACT,aAAOrB,gBAAgB,CAAC,IAAD,CAAvB;AACD;AACF,GALQ,EAKN,CAACD,aAAD,CALM,CAAT;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,UAAF;AAAcgB,MAAAA,WAAd;AAA2BlB,MAAAA,aAA3B;AAA0CC,MAAAA;AAA1C,KADT;AAAA,cAGGH;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjDM;;GAAMD,Y;UACKJ,U;;;KADLI,Y","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../services\";\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const history = useHistory();\n  const [authenticated, setAuthenticated] = useState(false);\n\n  const constLogin = (data) => {\n    api\n      .post(\"/sessions/\", data)\n      .then((response) => { top()\n      })\n      .then((response) => {\n        localStorage.setItem(\"@KenzieHealth:userName\", data.username);\n        localStorage.setItem(\n          \"@KenzieHealth:token\",\n          JSON.stringify(response.data.access)\n        );\n        toast.success(\"Login feito com ucesso!\");\n        setAuthenticated(true);\n        history.push(\"/dashboard\");\n      })\n      .catch(() => {\n        toast.error(\"Username ou senha inválidos!\");\n      });\n  };\n\n  const constSignUp = (data) => {\n    api\n      .post(\"/users/\", data)\n      .then(() => toast.success(\"Conta Criada Com Sucesso!\"))\n      .then(() => history.push(\"/login\"))\n      .catch((err) => {\n        console.log(err);\n        toast.error(\"Erro ao Criar a Conta\");\n      });\n  };\n\n  useEffect(() => {\n    const token = JSON.parse(localStorage.getItem(\"@KenzieHealth:token\"));\n    if (token) {\n      return setAuthenticated(true);\n    }\n  }, [authenticated]);\n\n  return (\n    <UserContext.Provider\n      value={{ constLogin, constSignUp, authenticated, setAuthenticated }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}