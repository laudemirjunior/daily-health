{"ast":null,"code":"var _jsxFileName = \"/home/laudemir/\\xC1rea de Trabalho/projeto-gestao-de-habitos/src/Providers/myGroupList/index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyGroupListContext = /*#__PURE__*/createContext();\nexport const MyGroupListProvider = ({\n  children\n}) => {\n  _s();\n\n  const user = localStorage.getItem(\"user\");\n  const [myGroupList, setMygroupList] = useState([]);\n  const token = `Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjM0NzY2MTQzLCJqdGkiOiI4ZmFkOGU4ODU1OGI0ZGFiOGJlZGI1YWNhYTYxOWQwMiIsInVzZXJfaWQiOjE1fQ.MyM-dshWnP1BhPl-jbGWJGvTpe_ujZzKuEN1N6so-pY`;\n\n  const notifyGetMyGroupList = () => toast.error(\"Erro ao carregar sua lista de grupos!\");\n\n  const notifyCreateGroup = () => toast.error(\"Erro ao criar seu grupo!\");\n\n  const notifySubscribe = () => toast.error(\"Erro ao se escrever no grupo!\");\n\n  const notifyUnSubscribe = () => toast.error(\"Erro ao desinscrever do grupo!\");\n\n  const getMyGroupList = () => {\n    api.get(\"/groups/subscriptions/\", {\n      headers: {\n        Authorization: token\n      }\n    }).then(response => setMygroupList(response.data)).catch(err => notifyGetMyGroupList());\n  };\n\n  useEffect(() => {\n    getMyGroupList();\n  }, []);\n\n  const createGroup = groupInfo => {\n    console.log(groupInfo);\n    api.post(\"/groups/\", groupInfo, {\n      headers: {\n        Authorization: token\n      }\n    }).then(() => getMyGroupList()).catch(() => notifyCreateGroup());\n  };\n\n  const subscribe = group => {\n    api.post(`/groups/${group.id}/subscribe/`, null, {\n      headers: {\n        Authorization: token\n      }\n    }).then(() => getMyGroupList()).catch(() => notifySubscribe());\n  };\n\n  const unSubscribe = group => {\n    api.delete(`/groups/${group.id}/unsubscribe/`, {\n      headers: {\n        Authorization: token\n      }\n    }).then(() => getMyGroupList()).catch(() => notifyUnSubscribe());\n  };\n\n  return /*#__PURE__*/_jsxDEV(MyGroupListContext.Provider, {\n    value: {\n      myGroupList,\n      setMygroupList,\n      createGroup,\n      subscribe,\n      unSubscribe\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyGroupListProvider, \"5xDGosrHrmd5RkPdm7hABPncF+0=\");\n\n_c = MyGroupListProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyGroupListProvider\");","map":{"version":3,"sources":["/home/laudemir/Área de Trabalho/projeto-gestao-de-habitos/src/Providers/myGroupList/index.js"],"names":["createContext","useState","useEffect","toast","api","MyGroupListContext","MyGroupListProvider","children","user","localStorage","getItem","myGroupList","setMygroupList","token","notifyGetMyGroupList","error","notifyCreateGroup","notifySubscribe","notifyUnSubscribe","getMyGroupList","get","headers","Authorization","then","response","data","catch","err","createGroup","groupInfo","console","log","post","subscribe","group","id","unSubscribe","delete"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;AACA,OAAO,MAAMC,kBAAkB,gBAAGL,aAAa,EAAxC;AAEP,OAAO,MAAMM,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnD,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMY,KAAK,GAAI,wNAAf;;AAEA,QAAMC,oBAAoB,GAAG,MAC3BX,KAAK,CAACY,KAAN,CAAY,uCAAZ,CADF;;AAEA,QAAMC,iBAAiB,GAAG,MAAMb,KAAK,CAACY,KAAN,CAAY,0BAAZ,CAAhC;;AACA,QAAME,eAAe,GAAG,MAAMd,KAAK,CAACY,KAAN,CAAY,+BAAZ,CAA9B;;AACA,QAAMG,iBAAiB,GAAG,MAAMf,KAAK,CAACY,KAAN,CAAY,gCAAZ,CAAhC;;AAEA,QAAMI,cAAc,GAAG,MAAM;AAC3Bf,IAAAA,GAAG,CACAgB,GADH,CACO,wBADP,EACiC;AAC7BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAET;AADR;AADoB,KADjC,EAMGU,IANH,CAMSC,QAAD,IAAcZ,cAAc,CAACY,QAAQ,CAACC,IAAV,CANpC,EAOGC,KAPH,CAOUC,GAAD,IAASb,oBAAoB,EAPtC;AAQD,GATD;;AAWAZ,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMS,WAAW,GAAIC,SAAD,IAAe;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAzB,IAAAA,GAAG,CACA4B,IADH,CACQ,UADR,EACoBH,SADpB,EAC+B;AAC3BR,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAET;AADR;AADkB,KAD/B,EAMGU,IANH,CAMQ,MAAMJ,cAAc,EAN5B,EAOGO,KAPH,CAOS,MAAMV,iBAAiB,EAPhC;AAQD,GAVD;;AAYA,QAAMiB,SAAS,GAAIC,KAAD,IAAW;AAC3B9B,IAAAA,GAAG,CACA4B,IADH,CACS,WAAUE,KAAK,CAACC,EAAG,aAD5B,EAC0C,IAD1C,EACgD;AAC5Cd,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAET;AADR;AADmC,KADhD,EAMGU,IANH,CAMQ,MAAMJ,cAAc,EAN5B,EAOGO,KAPH,CAOS,MAAMT,eAAe,EAP9B;AAQD,GATD;;AAWA,QAAMmB,WAAW,GAAIF,KAAD,IAAW;AAC7B9B,IAAAA,GAAG,CACAiC,MADH,CACW,WAAUH,KAAK,CAACC,EAAG,eAD9B,EAC8C;AAC1Cd,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAET;AADR;AADiC,KAD9C,EAMGU,IANH,CAMQ,MAAMJ,cAAc,EAN5B,EAOGO,KAPH,CAOS,MAAMR,iBAAiB,EAPhC;AAQD,GATD;;AAWA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,WADK;AAELC,MAAAA,cAFK;AAGLgB,MAAAA,WAHK;AAILK,MAAAA,SAJK;AAKLG,MAAAA;AALK,KADT;AAAA,cASG7B;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA1EM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../services\";\nexport const MyGroupListContext = createContext();\n\nexport const MyGroupListProvider = ({ children }) => {\n  const user = localStorage.getItem(\"user\");\n  const [myGroupList, setMygroupList] = useState([]);\n\n  const token = `Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjM0NzY2MTQzLCJqdGkiOiI4ZmFkOGU4ODU1OGI0ZGFiOGJlZGI1YWNhYTYxOWQwMiIsInVzZXJfaWQiOjE1fQ.MyM-dshWnP1BhPl-jbGWJGvTpe_ujZzKuEN1N6so-pY`;\n  \n  const notifyGetMyGroupList = () =>\n    toast.error(\"Erro ao carregar sua lista de grupos!\");\n  const notifyCreateGroup = () => toast.error(\"Erro ao criar seu grupo!\");\n  const notifySubscribe = () => toast.error(\"Erro ao se escrever no grupo!\");\n  const notifyUnSubscribe = () => toast.error(\"Erro ao desinscrever do grupo!\");\n\n  const getMyGroupList = () => {\n    api\n      .get(\"/groups/subscriptions/\", {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then((response) => setMygroupList(response.data))\n      .catch((err) => notifyGetMyGroupList());\n  };\n\n  useEffect(() => {\n    getMyGroupList();\n  }, []);\n\n  const createGroup = (groupInfo) => {\n    console.log(groupInfo);\n    api\n      .post(\"/groups/\", groupInfo, {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then(() => getMyGroupList())\n      .catch(() => notifyCreateGroup());\n  };\n\n  const subscribe = (group) => {\n    api\n      .post(`/groups/${group.id}/subscribe/`, null, {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then(() => getMyGroupList())\n      .catch(() => notifySubscribe());\n  };\n\n  const unSubscribe = (group) => {\n    api\n      .delete(`/groups/${group.id}/unsubscribe/`, {\n        headers: {\n          Authorization: token,\n        },\n      })\n      .then(() => getMyGroupList())\n      .catch(() => notifyUnSubscribe());\n  };\n\n  return (\n    <MyGroupListContext.Provider\n      value={{\n        myGroupList,\n        setMygroupList,\n        createGroup,\n        subscribe,\n        unSubscribe,\n      }}\n    >\n      {children}\n    </MyGroupListContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}