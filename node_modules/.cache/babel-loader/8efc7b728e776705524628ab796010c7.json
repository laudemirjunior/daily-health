{"ast":null,"code":"var _jsxFileName = \"/home/laudemir/\\xC1rea de Trabalho/projeto-gestao-de-habitos/src/Providers/habitsList/index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport api from \"../../services\";\nimport { useJwt } from \"react-jwt\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HabitListContext = /*#__PURE__*/createContext();\nexport const HabitListProvider = ({\n  children\n}) => {\n  _s();\n\n  const [habitList, setHabitList] = useState([]);\n  const [token] = useState(JSON.parse(localStorage.getItem(\"@KenzieHealth:token\")) || \"\");\n  const {\n    decodedToken\n  } = useJwt(token);\n\n  const notifyGetHabitList = () => toast.error(\"Erro ao carregar seus hábitos!\");\n\n  const notifyRemoveHabit = () => toast.error(\"Erro ao remover seu hábito!\");\n\n  const notifyCreateHabit = () => toast.error(\"Erro ao criar seu hábito!\");\n\n  const notifyUpdateHabit = () => toast.error(\"Erro ao atualizar seu hábito!\");\n\n  const getHabitList = () => {\n    if (token !== \"\") {\n      api.get(\"/habits/personal/\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => setHabitList(response.data)).catch(() => notifyGetHabitList());\n    }\n  };\n\n  useEffect(() => {\n    getHabitList();\n  }, []);\n  console.log(token);\n\n  const removeHabit = habit => {\n    api.delete(`/habits/${habit.id}/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => getHabitList()).catch(() => notifyRemoveHabit());\n  };\n\n  const createHabit = habit => {\n    let newHabit = { ...habit,\n      how_much_achieved: 0,\n      user: decodedToken.user_id\n    };\n    api.post(\"/habits/\", newHabit, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => getHabitList()).catch(() => notifyCreateHabit());\n  };\n\n  const updateHabit = (habit, item) => {\n    const newHabit = {\n      how_much_achieved: habit\n    };\n    api.patch(`/habits/${item}/`, newHabit, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => getHabitList()).catch(() => notifyUpdateHabit());\n  };\n\n  return /*#__PURE__*/_jsxDEV(HabitListContext.Provider, {\n    value: {\n      habitList,\n      removeHabit,\n      createHabit,\n      updateHabit\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HabitListProvider, \"kTm7T9vjldj2WgPvM3L1uNA0rpU=\", false, function () {\n  return [useJwt];\n});\n\n_c = HabitListProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"HabitListProvider\");","map":{"version":3,"sources":["/home/laudemir/Área de Trabalho/projeto-gestao-de-habitos/src/Providers/habitsList/index.js"],"names":["createContext","useState","useEffect","api","useJwt","toast","HabitListContext","HabitListProvider","children","habitList","setHabitList","token","JSON","parse","localStorage","getItem","decodedToken","notifyGetHabitList","error","notifyRemoveHabit","notifyCreateHabit","notifyUpdateHabit","getHabitList","get","headers","Authorization","then","response","data","catch","console","log","removeHabit","habit","delete","id","createHabit","newHabit","how_much_achieved","user","user_id","post","updateHabit","item","patch"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGN,aAAa,EAAtC;AAEP,OAAO,MAAMO,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,KAAD,IAAUV,QAAQ,CACtBW,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAX,KAA2D,EADrC,CAAxB;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAmBZ,MAAM,CAACO,KAAD,CAA/B;;AACA,QAAMM,kBAAkB,GAAG,MACzBZ,KAAK,CAACa,KAAN,CAAY,gCAAZ,CADF;;AAEA,QAAMC,iBAAiB,GAAG,MAAMd,KAAK,CAACa,KAAN,CAAY,6BAAZ,CAAhC;;AACA,QAAME,iBAAiB,GAAG,MAAMf,KAAK,CAACa,KAAN,CAAY,2BAAZ,CAAhC;;AACA,QAAMG,iBAAiB,GAAG,MAAMhB,KAAK,CAACa,KAAN,CAAY,+BAAZ,CAAhC;;AAEA,QAAMI,YAAY,GAAG,MAAM;AACzB,QAAIX,KAAK,KAAK,EAAd,EAAkB;AAChBR,MAAAA,GAAG,CACAoB,GADH,CACO,mBADP,EAC4B;AACxBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASd,KAAM;AADxB;AADe,OAD5B,EAMGe,IANH,CAMSC,QAAD,IAAcjB,YAAY,CAACiB,QAAQ,CAACC,IAAV,CANlC,EAOGC,KAPH,CAOS,MAAMZ,kBAAkB,EAPjC;AAQD;AACF,GAXD;;AAaAf,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;;AAEA,QAAMqB,WAAW,GAAIC,KAAD,IAAW;AAC7B9B,IAAAA,GAAG,CACA+B,MADH,CACW,WAAUD,KAAK,CAACE,EAAG,GAD9B,EACkC;AAC9BX,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASd,KAAM;AADxB;AADqB,KADlC,EAMGe,IANH,CAMQ,MAAMJ,YAAY,EAN1B,EAOGO,KAPH,CAOS,MAAMV,iBAAiB,EAPhC;AAQD,GATD;;AAWA,QAAMiB,WAAW,GAAIH,KAAD,IAAW;AAC7B,QAAII,QAAQ,GAAG,EACb,GAAGJ,KADU;AAEbK,MAAAA,iBAAiB,EAAE,CAFN;AAGbC,MAAAA,IAAI,EAAEvB,YAAY,CAACwB;AAHN,KAAf;AAKArC,IAAAA,GAAG,CACAsC,IADH,CACQ,UADR,EACoBJ,QADpB,EAC8B;AAC1Bb,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASd,KAAM;AADxB;AADiB,KAD9B,EAMGe,IANH,CAMQ,MAAMJ,YAAY,EAN1B,EAOGO,KAPH,CAOS,MAAMT,iBAAiB,EAPhC;AAQD,GAdD;;AAgBA,QAAMsB,WAAW,GAAG,CAACT,KAAD,EAAQU,IAAR,KAAiB;AACnC,UAAMN,QAAQ,GAAG;AAAEC,MAAAA,iBAAiB,EAAEL;AAArB,KAAjB;AACA9B,IAAAA,GAAG,CACAyC,KADH,CACU,WAAUD,IAAK,GADzB,EAC6BN,QAD7B,EACuC;AACnCb,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASd,KAAM;AADxB;AAD0B,KADvC,EAMGe,IANH,CAMQ,MAAMJ,YAAY,EAN1B,EAOGO,KAPH,CAOS,MAAMR,iBAAiB,EAPhC;AAQD,GAVD;;AAYA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AAAEZ,MAAAA,SAAF;AAAauB,MAAAA,WAAb;AAA0BI,MAAAA,WAA1B;AAAuCM,MAAAA;AAAvC,KADT;AAAA,cAGGlC;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7EM;;GAAMD,iB;UAKcH,M;;;KALdG,iB","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport api from \"../../services\";\nimport { useJwt } from \"react-jwt\";\nimport { toast } from \"react-toastify\";\n\nexport const HabitListContext = createContext();\n\nexport const HabitListProvider = ({ children }) => {\n  const [habitList, setHabitList] = useState([]);\n  const [token] = useState(\n    JSON.parse(localStorage.getItem(\"@KenzieHealth:token\")) || \"\"\n  );\n  const { decodedToken } = useJwt(token);\n  const notifyGetHabitList = () =>\n    toast.error(\"Erro ao carregar seus hábitos!\");\n  const notifyRemoveHabit = () => toast.error(\"Erro ao remover seu hábito!\");\n  const notifyCreateHabit = () => toast.error(\"Erro ao criar seu hábito!\");\n  const notifyUpdateHabit = () => toast.error(\"Erro ao atualizar seu hábito!\");\n\n  const getHabitList = () => {\n    if (token !== \"\") {\n      api\n        .get(\"/habits/personal/\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        .then((response) => setHabitList(response.data))\n        .catch(() => notifyGetHabitList());\n    }\n  };\n\n  useEffect(() => {\n    getHabitList();\n  }, []);\n\n  console.log(token);\n\n  const removeHabit = (habit) => {\n    api\n      .delete(`/habits/${habit.id}/`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then(() => getHabitList())\n      .catch(() => notifyRemoveHabit());\n  };\n\n  const createHabit = (habit) => {\n    let newHabit = {\n      ...habit,\n      how_much_achieved: 0,\n      user: decodedToken.user_id,\n    };\n    api\n      .post(\"/habits/\", newHabit, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then(() => getHabitList())\n      .catch(() => notifyCreateHabit());\n  };\n\n  const updateHabit = (habit, item) => {\n    const newHabit = { how_much_achieved: habit };\n    api\n      .patch(`/habits/${item}/`, newHabit, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then(() => getHabitList())\n      .catch(() => notifyUpdateHabit());\n  };\n\n  return (\n    <HabitListContext.Provider\n      value={{ habitList, removeHabit, createHabit, updateHabit }}\n    >\n      {children}\n    </HabitListContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}