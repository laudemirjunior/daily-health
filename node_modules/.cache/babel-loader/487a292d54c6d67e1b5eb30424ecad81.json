{"ast":null,"code":"var _jsxFileName = \"/home/laudemir/\\xC1rea de Trabalho/projeto-gestao-de-habitos/src/Providers/goals/index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport api from \"../../services\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GoalsContext = /*#__PURE__*/createContext();\nexport const GoalsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [goalsList, setGoalsList] = useState([]);\n  const [token] = useState(JSON.parse(localStorage.getItem(\"@KenzieHealth:token\")) || \"\");\n\n  const notifySearchGoals = () => toast.error(\"Erro ao carregar suas metas!\");\n\n  const notifyCreateGoals = () => toast.error(\"Erro ao criar sua meta!\");\n\n  const notifyUpdateGoals = () => toast.error(\"Erro ao atualizar sua meta!\");\n\n  const notifyDeleteGoals = () => toast.error(\"Erro ao deletar sua meta!\");\n\n  const searchGoals = id => {\n    api.get(`/goals/?group=${id}&page=1`, null, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      setGoalsList(response.data.results);\n    }).catch(() => notifySearchGoals());\n  };\n\n  const createGoals = goal => {\n    api.post(\"/goals/\", goal, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).catch(() => notifyCreateGoals());\n  };\n\n  const updateGoals = (boolean, id) => {\n    api.patch(`/goals/${id}/`, {\n      achieved: boolean\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).catch(() => notifyUpdateGoals());\n  };\n\n  const deleteGoals = id => {\n    api.delete(`/goals/${id}/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).catch(() => notifyDeleteGoals());\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoalsContext.Provider, {\n    value: {\n      searchGoals,\n      goalsList,\n      createGoals,\n      updateGoals,\n      deleteGoals\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoalsProvider, \"eqXrGgDQkDYzYx2x03FAiATnBa4=\");\n\n_c = GoalsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoalsProvider\");","map":{"version":3,"sources":["/home/laudemir/Área de Trabalho/projeto-gestao-de-habitos/src/Providers/goals/index.js"],"names":["createContext","useState","api","toast","GoalsContext","GoalsProvider","children","goalsList","setGoalsList","token","JSON","parse","localStorage","getItem","notifySearchGoals","error","notifyCreateGoals","notifyUpdateGoals","notifyDeleteGoals","searchGoals","id","get","headers","Authorization","then","response","data","results","catch","createGoals","goal","post","updateGoals","boolean","patch","achieved","deleteGoals","delete"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AACA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;AAEP,OAAO,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,IAAUR,QAAQ,CACtBS,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAX,KAA2D,EADrC,CAAxB;;AAGA,QAAMC,iBAAiB,GAAG,MAAMX,KAAK,CAACY,KAAN,CAAY,8BAAZ,CAAhC;;AACA,QAAMC,iBAAiB,GAAG,MAAMb,KAAK,CAACY,KAAN,CAAY,yBAAZ,CAAhC;;AACA,QAAME,iBAAiB,GAAG,MAAMd,KAAK,CAACY,KAAN,CAAY,6BAAZ,CAAhC;;AACA,QAAMG,iBAAiB,GAAG,MAAMf,KAAK,CAACY,KAAN,CAAY,2BAAZ,CAAhC;;AAEA,QAAMI,WAAW,GAAIC,EAAD,IAAQ;AAC1BlB,IAAAA,GAAG,CACAmB,GADH,CACQ,iBAAgBD,EAAG,SAD3B,EACqC,IADrC,EAC2C;AACvCE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASd,KAAM;AADxB;AAD8B,KAD3C,EAMGe,IANH,CAMSC,QAAD,IAAc;AAClBjB,MAAAA,YAAY,CAACiB,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAZ;AACD,KARH,EASGC,KATH,CASS,MAAMd,iBAAiB,EAThC;AAUD,GAXD;;AAaA,QAAMe,WAAW,GAAIC,IAAD,IAAU;AAC5B5B,IAAAA,GAAG,CACA6B,IADH,CACQ,SADR,EACmBD,IADnB,EACyB;AACrBR,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASd,KAAM;AADxB;AADY,KADzB,EAMGmB,KANH,CAMS,MAAMZ,iBAAiB,EANhC;AAOD,GARD;;AAUA,QAAMgB,WAAW,GAAG,CAACC,OAAD,EAAUb,EAAV,KAAiB;AACnClB,IAAAA,GAAG,CACAgC,KADH,CAEK,UAASd,EAAG,GAFjB,EAGI;AAAEe,MAAAA,QAAQ,EAAEF;AAAZ,KAHJ,EAII;AACEX,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASd,KAAM;AADxB;AADX,KAJJ,EAUGmB,KAVH,CAUS,MAAMX,iBAAiB,EAVhC;AAWD,GAZD;;AAcA,QAAMmB,WAAW,GAAIhB,EAAD,IAAQ;AAC1BlB,IAAAA,GAAG,CACAmC,MADH,CACW,UAASjB,EAAG,GADvB,EAC2B;AACvBE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASd,KAAM;AADxB;AADc,KAD3B,EAMGmB,KANH,CAMS,MAAMV,iBAAiB,EANhC;AAOD,GARD;;AAUA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,WADK;AAELZ,MAAAA,SAFK;AAGLsB,MAAAA,WAHK;AAILG,MAAAA,WAJK;AAKLI,MAAAA;AALK,KADT;AAAA,cASG9B;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAtEM;;GAAMD,a;;KAAAA,a","sourcesContent":["import { createContext, useState } from \"react\";\nimport api from \"../../services\";\nimport { toast } from \"react-toastify\";\nexport const GoalsContext = createContext();\n\nexport const GoalsProvider = ({ children }) => {\n  const [goalsList, setGoalsList] = useState([]);\n  const [token] = useState(\n    JSON.parse(localStorage.getItem(\"@KenzieHealth:token\")) || \"\"\n  );\n  const notifySearchGoals = () => toast.error(\"Erro ao carregar suas metas!\");\n  const notifyCreateGoals = () => toast.error(\"Erro ao criar sua meta!\");\n  const notifyUpdateGoals = () => toast.error(\"Erro ao atualizar sua meta!\");\n  const notifyDeleteGoals = () => toast.error(\"Erro ao deletar sua meta!\");\n\n  const searchGoals = (id) => {\n    api\n      .get(`/goals/?group=${id}&page=1`, null, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        setGoalsList(response.data.results);\n      })\n      .catch(() => notifySearchGoals());\n  };\n\n  const createGoals = (goal) => {\n    api\n      .post(\"/goals/\", goal, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .catch(() => notifyCreateGoals());\n  };\n\n  const updateGoals = (boolean, id) => {\n    api\n      .patch(\n        `/goals/${id}/`,\n        { achieved: boolean },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .catch(() => notifyUpdateGoals());\n  };\n\n  const deleteGoals = (id) => {\n    api\n      .delete(`/goals/${id}/`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .catch(() => notifyDeleteGoals());\n  };\n\n  return (\n    <GoalsContext.Provider\n      value={{\n        searchGoals,\n        goalsList,\n        createGoals,\n        updateGoals,\n        deleteGoals,\n      }}\n    >\n      {children}\n    </GoalsContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}